# Config file for tmux(1).
# https://github.com/tmux/tmux/wiki/FAQ
#
# Tmux initialization with SSH:
#   -t -- tmux -u new -A -s main
#
# Reload tmux config:
#   <prefix> R
#
# Hierarchy and terminology.
#   Session (<prefix> s)
#   \- Window (<prefix> w)
#    \- Pane (<prefix> q)
#
# List all commands:
#   :list-commands
#
# List all keybindings:
#   <prefix> ?
#   :list-keys
#
# Show option value:
#   :show-options -g -s <name>
#
# Prefix is C-z.
# Previously C-a. The caveat of C-a is the beginning-of-line shell shortcut for zsh.

# +------------------+
# | GENERAL SETTINGS |
# +------------------+

# Enable true color and italics
set -g default-terminal 'tmux-256color'
set -ag terminal-overrides ',xterm-256color:RGB'

# Increase scrollback buffer size
set -g history-limit 100000

# Escape immediately
set -g escape-time 0

# Start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows sequentially after closing any of them
set -g renumber-windows on

# Enable automatic rename but do not change window name automatically once it is manually set
set -g automatic-rename on
set -g allow-rename off

# Display tmux messages for 3 seconds.
set -g display-time 3000

set -g pane-border-lines heavy
set -g monitor-activity on
set -g activity-action none

# Enable windows titles
set -g set-titles on
set -g set-titles-string '#{pane_current_command}: #{pane_title}'

# Enable clipboard integration
set -g set-clipboard on

# Enable mouse support
set -g mouse on

# Restore screen when exiting an interactive application
setw -g alternate-screen on

# +--------+
# | COLORS |
# +--------+

if '[ -n '$SSH_CONNECTION' ]' \
    'setenv -g TMUX_HOST_PROMPT "#(hostname) "' \
    'setenv -g TMUX_HOST_PROMPT ""'

# TokyoNight colors for Tmux

set -g mode-style 'fg=#7aa2f7,bg=#3b4261'

set -g message-style 'fg=#7aa2f7,bg=#3b4261'
set -g message-command-style 'fg=#7aa2f7,bg=#3b4261'

set -g pane-border-style 'fg=#3b4261'
set -g pane-active-border-style 'fg=#7aa2f7'

set -g status 'on'
set -g status-justify 'left'

set -g status-style 'fg=#7aa2f7,bg=#1f2335'

set -g status-left-length '100'
set -g status-right-length '100'

set -g status-left-style NONE
set -g status-right-style NONE

set -g status-left '#[fg=#1d202f,bg=#7aa2f7,bold] #S #[fg=#7aa2f7,bg=#1f2335,nobold,nounderscore,noitalics]'
set -g status-right '#[fg=#1f2335,bg=#1f2335,nobold,nounderscore,noitalics]#[fg=#7aa2f7,bg=#1f2335] #{prefix_highlight} #[fg=#3b4261,bg=#1f2335,nobold,nounderscore,noitalics]#[fg=#7aa2f7,bg=#3b4261] %Y-%m-%d  %I:%M %p #[fg=#7aa2f7,bg=#3b4261,nobold,nounderscore,noitalics]#[fg=#1d202f,bg=#7aa2f7,bold] #h '

setw -g window-status-activity-style 'underscore,fg=#a9b1d6,bg=#1f2335'
setw -g window-status-separator ''
setw -g window-status-style 'NONE,fg=#a9b1d6,bg=#1f2335'
setw -g window-status-format '#[fg=#1f2335,bg=#1f2335,nobold,nounderscore,noitalics]#[default] #I  #W #F #[fg=#1f2335,bg=#1f2335,nobold,nounderscore,noitalics]'
setw -g window-status-current-format '#[fg=#1f2335,bg=#3b4261,nobold,nounderscore,noitalics]#[fg=#7aa2f7,bg=#3b4261,bold] #I  #W #F #[fg=#3b4261,bg=#1f2335,nobold,nounderscore,noitalics]'

# tmux-plugins/tmux-prefix-highlight support
set -g @prefix_highlight_output_prefix '#[fg=#e0af68]#[bg=#1f2335]#[fg=#1f2335]#[bg=#e0af68]'
set -g @prefix_highlight_output_suffix ''

# +-------------+
# | KEYBINDINGS |
# +-------------+

# Set vi mode keybindings.
set -g mode-keys vi

# Disable default prefix key.
unbind C-b

# Set tmux prefix to be Ctrl-z
set -g prefix C-z

# align windows vertically
bind = select-layout even-vertical

# reload the tmux configuration
bind R source-file '$DOTFILES/tmux/tmux.conf' \; display 'Sourced tmux.conf!'

# Synchronize panes
bind S run '
    tmux set-option -w synchronize-panes;
    tmux show-options -w synchronize-panes
      | fgrep -q off && tmux display "Pane synchronization disabled"
      || tmux display "Pane synchronization enabled"
  '

# +---------------+
# | PANE BINDINGS |
# +---------------+

select='$DOTFILES/tmux/scripts/select'

# Switch panes
bind                   h run 'tmux select-pane -L || true'
bind                 C-h run 'tmux select-pane -L || true'
bind -T copy-mode-vi C-h run 'tmux select-pane -L || true'
bind -T root         C-h run '$select -L || true'

bind                   j run 'tmux select-pane -D || true'
bind                 C-j run 'tmux select-pane -D || true'
bind -T copy-mode-vi C-j run 'tmux select-pane -D || true'
bind -T root         C-j run '$select -D || true'

bind                   k run 'tmux select-pane -U || true'
bind                 C-k run 'tmux select-pane -U || true'
bind -T copy-mode-vi C-k run 'tmux select-pane -U || true'
bind -T root         C-k run '$select -U || true'

bind                   l run 'tmux select-pane -R || true'
bind                 C-l run 'tmux select-pane -R || true'
bind -T copy-mode-vi C-l run 'tmux select-pane -R || true'
bind -T root         C-l run '$select -R || true'

bind                   \\ run '$select --last || true'
bind                 C-\\ run '$select --last || true'
bind -T copy-mode-vi C-\\ run '$select --last || true'
bind -T root         C-\\ run '$select --last || true'

# Resize panes
bind -r H resize-pane -L 3
bind -r J resize-pane -D 3
bind -r K resize-pane -U 3
bind -r L resize-pane -R 3

# +-----------------+
# | WINDOW BINDINGS |
# +-----------------+

# switch between windows
bind -T root -r M-, previous-window
bind -T root -r M-. next-window

# User-friendly shortcuts to split windows, split windows on current path.
bind - split-window -v -c '#{pane_current_path}'
bind | split-window -h -c '#{pane_current_path}'

# +--------------------+
# | COPY-MODE BINDINGS |
# +--------------------+

bind                 [          copy-mode -e
bind                 C-[        copy-mode -e
bind -T root         S-PageUp   copy-mode -eu
bind -T root         S-PageDown send
bind -T copy-mode-vi S-PageUp   send -X page-up
bind -T copy-mode-vi S-PageDown send -X page-down

bind -T copy-mode-vi Home send -X start-of-line
bind -T copy-mode-vi End  send -X end-of-line
bind -T copy-mode-vi ]    send -X cancel
bind -T copy-mode-vi v    send -X begin-selection
unbind -T copy-mode-vi    C-j

# +--------------------------+
# | MOUSE COPY-MODE BINDINGS |
# +--------------------------+

bind -T root WheelUpPane   select-pane -t= \; if -F -t= '#{mouse_any_flag}' 'send -M' 'if -Ft= "#{pane_in_mode}" "send -M" "copy-mode -e"'
bind -T root WheelDownPane select-pane -t= \; send -M

bind -T root M-WheelUpPane select-pane -t= \; if -F -t= '#{mouse_any_flag}' 'send -M' 'if -Ft= "#{pane_in_mode}" "send -M" "copy-mode -e"'
bind -T copy-mode-vi M-WheelUpPane   send -X halfpage-up
bind -T copy-mode-vi M-WheelDownPane send -X halfpage-down

# +--------+
# | SEARCH |
# +--------+

search='$DOTFILES/tmux/scripts/search'
bind         /   run '$search'
bind -T root M-p run '$search paths'
bind -T root M-u run '$search interesting'

# Advanced selection/yank/pasterz
set -g @yank_selection_mouse clipboard
run-shell '$DOTFILES/tmux/plugins/yank/yank.tmux'
run-shell '$DOTFILES/tmux/plugins/open/open.tmux'
run-shell '$DOTFILES/tmux/plugins/prefix-highlight/prefix_highlight.tmux'
